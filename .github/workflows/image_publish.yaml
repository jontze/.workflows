name: Publish Image
on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
        description: "The name of the image to publish"
      scope:
        required: false
        type: string
        description: "The scope of the image to publish (e.g. organization name)"
        default: ${{ github.repository_owner }}
      registry:
        required: false
        type: string
        default: "ghcr.io"
        description: "The registry to publish the image to"
      push:
        required: false
        type: boolean
        default: true
        description: "Whether to push the image to the registry"
      cache_from_tag:
        required: false
        type: string
        description: "The tag to use for the cache-from image"
        default: "latest"

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Publish Image
    permissions:
      contents: read
      packages: write
    env:
      FULL_IMAGE_NAME: ${{ inputs.registry }}/${{ inputs.scope }}/${{ inputs.image_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup Docker Meta
        uses: docker/metadata-action@v5
        id: docker-meta
        with:
          images: |
            ${{ env.FULL_IMAGE_NAME }}
          tags: |
            type=sha,
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels}}
          annotations: ${{ steps.docker-meta.outputs.annotations }}
          cache-from: type=gha,ref=${{ env.FULL_IMAGE_NAME }}:${{ inputs.cache_from_tag }}
          cache-to: type=gha,mode=max
