---
name: Rust Next Version
on: 
  workflow_call:
    inputs:
      use-deploy-key:
        default: false
        required: false
        type: boolean
        description: |
          Use the deploy key to checkout the repository. 
          This is useful when you have other workflows that listen to tag push events.
          GitHub doesn't trigger this event if the Git Action was created via regular GITHUB_TOKEN.
    secrets:
      DEPLOY_KEY:
        description: 'The private key to use for checking out the repository'
        required: false

env:
    RUST_BACKTRACE: full
    RUSTUP_MAX_RETRIES: 100
    CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
    CARGO_INCREMENTAL: 0
    CARGO_NET_RETRY: 100
    CARGO_TERM_COLOR: always

jobs:
  next:
    name: Next Version
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps:
      - name: Checkout (with deploy key)
        if: inputs.use-deploy-key == true
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          fetch-depth: 0
      - name: Checkout (with GITHUB_TOKEN)
        if: inputs.use-deploy-key == false
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --tags          
      - name: Setup Conventional Versioning
        uses: jontze/.workflows/setup-conventional-versioning@main
        with:
          version: v0.1.0
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-binstall
      - name: Install Cargo-Edit
        run: |
          cargo binstall cargo-edit --no-confirm
      - name: Specify next version
        id: next
        run: |
          echo "version=$(conventional-versioning -o plain)" >> $GITHUB_OUTPUT
      - name: Set Cargo version
        run: |
          cargo set-version ${{ steps.next.outputs.version }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        id: commit
        with:
          commit_message: "chore(version): Bump version to ${{ steps.next.outputs.version }}"
      - name: Create Tag
        if: steps.commit.outputs.changes_detected == 'true'
        run: |
          git tag v${{ steps.next.outputs.version }}
          git push origin v${{ steps.next.outputs.version }}

        

